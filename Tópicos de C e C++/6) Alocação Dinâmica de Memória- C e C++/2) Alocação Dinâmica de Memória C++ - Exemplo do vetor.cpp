#include <stdlib.h> //POSSUI A FUNÇÃO MALLOC
#include <iostream>
#include <stdio.h> //PARA FUNÇÃO GETS //PARA CAPTURAR CHAR
#include <locale.h>
#include <string>

    using namespace std;

    //UTLIZAREMOS MALLOC PARA ALOCAÇÃO DINÂMICA DE MEMÓRIA //ALOCAR MEMÓRIA SUFICIENTE, SEM DISPERDICIOS, PARA DETERMINADA APLICAÇÃO //A MEMÓRIA SERÁ ALOCADA APÓS O ENTER
    //NESTE CASO UTILIZAREMOS PARA DEFINIR DINAMICAMENTE O TAMANHO DE UM VETOR
    //PARA LER STRINGS O IDEAL É UTILIZAR FGETS, PORQUE SCANF É DEFICIENTE NA LEITURA DE CADEIAS DE CARACTERES POR N MOTIVOS //EXEMPLO: NÃO LÊ ESPAÇOS
    //REFERENCIA: https://www.youtube.com/watch?v=-ifKsb9pIKE

    int main(){

        char *vnome; //PONTEIRO QUE IRÁ APONTAR PARA UM VETOR DE CARACTERES //O TAMANHO NÃO É DEFINIDO, POIS O PONTEIRO IRÁ APONTAR DINÂMICAMENTE PARA CADA POSIÇÃO

        //MALLOC= FUNÇÃO PARA ALOCAR MEMÓRIA DE FORMA CONSECUTIVA // SIZEOF(CHAR) = DEFINE QUE MALLOC IRÁ ALOCAR 4 BITS DE FORMA CONSECUTIVA //1CHAR = 4BITS
        //MALLOC RETORNA VOID, ENTÃO FORÇAMOS ELE A RETORNAR UM PONTEIRO DO TIPO CHAR (char *) //NOME DISTO É CAST
        vnome = (char *) malloc(sizeof(char));

        //AO DIGITAR A PALAVRA, O ESPAÇO NA MEMORIA, EM BITS, SERÁ ALOCADO DE FORMA EXATA
        gets(vnome); //VERIFICAR DIFERENÇA ENTRE FGETS E GETS
        cout << vnome;

        system("pause");
        return 0;

    }
